[build-system]
requires = ["setuptools", "setuptools_scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "app"
dynamic = ["version"]
description = "A starter project for a REST API using Flask"
readme = "README.md"
authors = [{ name = "Amogh Madan", email = "amoghmadaan@gmail.com" }]
license = { file = "LICENSE" }
requires-python = ">=3.12,<3.14"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Framework :: Flask :: 3.0",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
]
dependencies = [
    "alembic==1.13.2",
    "blinker==1.8.2",
    "click==8.1.7",
    "Flask==3.0.3",
    "flask-marshmallow==1.2.1",
    "Flask-Migrate==4.0.7",
    "Flask-SQLAlchemy==3.1.1",
    "itsdangerous==2.2.0",
    "Jinja2==3.1.4",
    "Mako==1.3.5",
    "MarkupSafe==2.1.5",
    "marshmallow==3.21.3",
    "marshmallow-sqlalchemy==1.0.0",
    "packaging==24.1",
    "python-dotenv==1.0.1",
    "SQLAlchemy==2.0.32",
    "typing_extensions==4.12.2",
    "Werkzeug==3.0.3",
]

[project.optional-dependencies]
all = [
    "cachetools==5.4.0",
    "chardet==5.2.0",
    "colorama==0.4.6",
    "coverage==7.6.1",
    "distlib==0.3.8",
    "filelock==3.15.4",
    "gunicorn==23.0.0",
    "iniconfig==2.0.0",
    "platformdirs==4.2.2",
    "pluggy==1.5.0",
    "pyproject-api==1.7.1",
    "pytest==8.3.2",
    "tox==4.17.1",
    "virtualenv==20.26.3",
]
automation = [
    "cachetools==5.4.0",
    "chardet==5.2.0",
    "colorama==0.4.6",
    "distlib==0.3.8",
    "filelock==3.15.4",
    "platformdirs==4.2.2",
    "pluggy==1.5.0",
    "pyproject-api==1.7.1",
    "tox==4.17.1",
    "virtualenv==20.26.3",
]
deployment = ["gunicorn==23.0.0"]
test = [
    "coverage==7.6.1",
    "iniconfig==2.0.0",
    "pytest==8.3.2",
]


[tool.setuptools.packages.find]
where = ["src"]


[tool.setuptools_scm]
version_file = "src/app/__version__.py"
local_scheme = "no-local-version"


[tool.coverage.run]
omit = ["tests/*", "venv/*", "__version__.py"]


[tool.isort]
profile = "black"
skip_glob = ["**/migrations"]

[tool.black]
line-length = 88
extend-exclude = "migrations/*"


[tool.bandit]
exclude_dirs = [
    "./.eggs",
    "./.git",
    "./.tox",
    "./build",
    "./coverage",
    "./dist",
    "./venv",
    "./__pycache__",
    "*tests*",
]


[tool.mypy]
exclude = """
^.*\b(migrations)\b.*$
"""
ignore_missing_imports = true
